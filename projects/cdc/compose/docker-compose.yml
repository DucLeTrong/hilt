version: "2.5"

services:

  zookeeper:
    extends:
      file: ../../../docker/storage/zookeeper/docker-compose.yml
      service: zookeeper
    networks:
      - local

  kafka:
    extends:
      file: ../../../docker/storage/kafka/docker-compose.yml
      service: kafka
    networks:
      - local

  schema-registry:
    extends:
      file: ../../../docker/storage/kafka/docker-compose-sr.yml
      service: schema-registry
    networks:
      - local

  console:
    extends:
      file: ../../../docker/storage/kafka/docker-compose.yml
      service: console
    environment:
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://schema-registry:8085"]
        connect:
          enabled: true
          clusters:
            - name: debezium
              url: http://debezium:8083
    networks:
      - local

  # akhq:
  #   extends:
  #     file: ../../../docker/storage/kafka/docker-compose.yml
  #     service: akhq
  #   environment:
  #     AKHQ_CONFIGURATION: |
  #       akhq:
  #         connections:
  #           kafka-local:
  #             properties:
  #               bootstrap.servers: kafka:9092
  #             schema-registry:
  #               url: "http://schema-registry:8085"
  #             connect:
  #               - name: debezium
  #                 url: http://debezium:8083

  debezium:
    extends:
      file: ../../../docker/computation/debezium/docker-compose.yml
      service: debezium
    networks:
      - local

  mysql:
    extends:
      file: ../../../docker/databases/mysql/docker-compose.yml
      service: mysql
    networks:
      - local

  # postgresql:
  #   extends:
  #     file: ../../../docker/databases/postgresql/docker-compose.yml
  #     service: postgresql
  #   networks:
  #     - local

  # hive-server:
  #   extends:
  #     file: ../../../docker/warehouse/hive/docker-compose.yml
  #     service: hive-server
  #   networks:
  #     - local

  # hive-metastore:
  #   extends:
  #     file: ../../../docker/warehouse/hive/docker-compose.yml
  #     service: hive-metastore
  #   networks:
  #     - local

  # init_metastore_db:
  #   extends:
  #     file: ../../../docker/warehouse/hive/docker-compose.yml
  #     service: init_metastore_db
  #   networks:
  #     - local

  # minio:
  #   extends:
  #     file: ../../../docker/storage/minio/docker-compose.yml
  #     service: minio
  #   networks:
  #     - local

  # stream-mysql:
  #   extends:
  #     file: ../../../docker/computation/alluvial/docker-compose.yml
  #     service: alluvial-stream
  #   command:
  #     - alluvial
  #     - stream
  #     - /etc/alluvial/ingestor-mysql.yaml
  #   volumes:
  #     - ./ingestors:/etc/alluvial
  #   networks:
  #     - local

  # stream-postgresql:
  #   extends:
  #     file: ../../../docker/computation/alluvial/docker-compose.yml
  #     service: alluvial-stream
  #   command:
  #     - alluvial
  #     - stream
  #     - /etc/alluvial/ingestor-postgresql.yaml
  #   volumes:
  #     - ./ingestors:/etc/alluvial
  #   networks:
  #     - local

networks:
  local:
    external: true

volumes:
  kafka_data:
  zookeeper_data:
  mysql_data:
  postgres_data:
  minio_data:
