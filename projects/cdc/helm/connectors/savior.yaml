apiVersion: v1
kind: ConfigMap
metadata:
  name: connectors-savior
  namespace: kafka
data:
  connectors-savior.py: |
    import os
    import json
    import time
    import logging
    import urllib.request as request
    from typing import List, Dict


    logging.basicConfig(level = logging.INFO)
    logger = logging.getLogger(__name__)

    __DEBEZIUM_CONNECT_API_URL = os.environ.get('DEBEZIUM_CONNECT_API_URL', 'http://localhost:8083')
    # The time between 2 times of scanning connectors status and restart them if need
    __RUN_SCHEDULE = int(os.environ.get('RUN_SCHEDULE', 10))

    def get_connectors() -> List[str]:
        __LIST_CONNECTORS = 'connectors'
        url = f'{__DEBEZIUM_CONNECT_API_URL}/{__LIST_CONNECTORS}'
        req = request.Request(url, method='GET')
        with request.urlopen(req) as res:
            data = json.load(res)

        return data

    def get_connector_status(connector: str) -> List[Dict]:
        __GET_CONNECTOR_STATUS = f'connectors/{connector}/status'
        url = f'{__DEBEZIUM_CONNECT_API_URL}/{__GET_CONNECTOR_STATUS}'
        req = request.Request(url, method='GET')
        with request.urlopen(req) as res:
            data = json.load(res)

        tasks_info = data['tasks']

        return tasks_info

    def restart_connector_task(connector: str, task_id: int):
        logger.info(f'Attemp to restart connector %s', connector)

        __RESTART_CONNECTOR_TASK = f'connectors/{connector}/tasks/{task_id}/restart'
        url = f'{__DEBEZIUM_CONNECT_API_URL}/{__RESTART_CONNECTOR_TASK}'
        req = request.Request(url, method='POST')

        with request.urlopen(req) as res:
            res.read()


    # if __name__ == "__main__":
    while True:
        connectors = get_connectors()
        logger.info(f'Got %s active connectors', len(connectors))
        for connector in connectors:
            tasks_info = get_connector_status(connector)
            for task_info in tasks_info:
                task_id = task_info['id']
                state = task_info['state']
                if state != 'RUNNING':
                    trace = task_info['trace']
                    logger.info(f'Connector %s is not running. Trace: %s', connector, trace)
                    restart_connector_task(connector, task_id)

        time.sleep(__RUN_SCHEDULE)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connectors-savior
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: connectors-savior
  template:
    metadata:
      labels:
        app.kubernetes.io/name: connectors-savior
    spec:
      containers:
      - name: connectors-savior
        image: python:3.9.14-slim
        command: ["python", "scripts/connectors-savior.py"]
        env:
        - name: DEBEZIUM_CONNECT_API_URL
          value: http://debezium-connect-api:8083
        - name: RUN_SCHEDULE
          value: "3600"
        volumeMounts:
        - name: connectors-savior
          mountPath: "/scripts"
      restartPolicy: Always
      volumes:
        - name: connectors-savior
          configMap:
            name: connectors-savior
