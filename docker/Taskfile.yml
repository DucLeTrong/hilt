version: '3'

includes:

  # Computation
  airflow:
    taskfile: cmds.yml
    dir: ./computation/airflow
    vars:
      DEPENDENT_SERVICES: postgresql redis
  datahub:
    taskfile: cmds.yml
    dir: ./computation/datahub
    vars:
      DEPENDENT_SERVICES: elasticsearch kafka mysql neo4j
  debezium:
    taskfile: cmds.yml
    dir: ./computation/debezium
    vars:
      REPOSITORY: sondn1
      IMAGE_NAME: debezium
      IMAGE_VERSION: 2.1.1
      IMAGE_BUILD_CONTEXT: image
  fluentbit:
    taskfile: cmds.yml
    dir: ./computation/fluentbit
  nifi:
    taskfile: cmds.yml
    dir: ./computation/nifi
    vars:
      DEPENDENT_SERVICES: zookeeper
  spark:
    taskfile: cmds.yml
    dir: ./computation/spark
  trino:
    taskfile: cmds.yml
    dir: ./computation/trino
    vars:
      REPOSITORY: sondn1
      IMAGE_NAME: trino
      IMAGE_VERSION: 408
      IMAGE_BUILD_CONTEXT: image

  # Data mining
  jupyter:
    taskfile: cmds.yml
    dir: ./data-mining/jupyter
  superset:
    taskfile: cmds.yml
    dir: ./data-mining/superset
    vars:
      DEPENDENT_SERVICES: postgresql redis

  # Databases
  clickhouse:
    taskfile: cmds.yml
    dir: ./databases/clickhouse
  mongo:
    taskfile: cmds.yml
    dir: ./databases/mongo
  mysql:
    taskfile: cmds.yml
    dir: ./databases/mysql
  neo4j:
    taskfile: cmds.yml
    dir: ./databases/neo4j
  postgresql:
    taskfile: cmds.yml
    dir: ./databases/postgresql
  rabbitmq:
    taskfile: cmds.yml
    dir: ./databases/rabbitmq
  redis:
    taskfile: cmds.yml
    dir: ./databases/redis

  # Monitoring
  grafana:
    taskfile: cmds.yml
    dir: ./monitoring/grafana
    vars:
      DEPENDENT_SERVICES: postgresql
  on-call:
    taskfile: cmds.yml
    dir: ./monitoring/on-call
    vars:
      DEPENDENT_SERVICES: grafana mysql rabbitmq
  prometheus:
    taskfile: cmds.yml
    dir: ./monitoring/prometheus

  # Security
  keycloak:
    taskfile: cmds.yml
    dir: ./security/keycloak
    vars:
      DEPENDENT_SERVICES: postgresql
  vault:
    taskfile: cmds.yml
    dir: ./security/vault

  # Storage
  elasticsearch:
    taskfile: cmds.yml
    dir: ./storage/elasticsearch
  kafka:
    taskfile: cmds.yml
    dir: ./storage/kafka
  minio:
    taskfile: cmds.yml
    dir: ./storage/minio
  opensearch:
    taskfile: cmds.yml
    dir: ./storage/opensearch
  zookeeper:
    taskfile: cmds.yml
    dir: ./storage/zookeeper

  # Warehouse
  hive:
    taskfile: cmds.yml
    dir: ./warehouse/hive
    vars:
      REPOSITORY: sondn1
      IMAGE_NAME: hive
      IMAGE_VERSION: 0.1.0
      IMAGE_BUILD_CONTEXT: image
      DEPENDENT_SERVICES: postgresql

  # Other
  postgrest:
    taskfile: cmds.yml
    dir: ./other/postgrest
    vars:
      DEPENDENT_SERVICES: postgresql
  strapi:
    taskfile: cmds.yml
    dir: ./other/strapi
    vars:
      DEPENDENT_SERVICES: postgresql

tasks:

  create-local-network:
    env:
      DEFAULT_NETWORK: '{{.DEFAULT_NETWORK | default "local"}}'
    cmds:
    - docker network create $DEFAULT_NETWORK

  rm-containers:
    cmds:
    - docker rm --force $(docker ps -aq)

  rm-volumes:
    cmds:
    - docker volume rm $(docker volume ls -q)

  prune:
    cmds:
    - docker system prune -af
