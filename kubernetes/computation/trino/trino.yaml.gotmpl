image:
  repository: trinodb/trino
  tag: 403

trino:
  ### JVM on Container
  # * https://merikan.com/2019/04/jvm-in-a-container/
  jvm.config: |
    -server
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -XX:ReservedCodeCacheSize=256M
    -XX:+UseContainerSupport
    -XX:MaxRAMPercentage=96.0
    -XX:-UseCompressedOops
    -Dtrust_all_cert=true
    -Djavax.net.ssl.trustStore=/etc/pki/k8s/truststore.p12
    -Djavax.net.ssl.trustStorePassword=jTATy27H2jQquoGHTxar3gGXgdg354GSA
  ### Tuning Trino
  # * https://trino.io/docs/current/admin/tuning.html
  # * https://trino.io/docs/current/admin/properties-query-management.html
  # * https://docs.qubole.com/en/latest/troubleshooting-guide/ts-presto/presto-tuning.html
  config.properties:
    task.concurrency: 2
    query.max-run-time:       15m
    query.max-execution-time: 15m
    query.max-memory:         500MB
    query.max-total-memory:   1GB
    query.max-memory-per-node:       500MB
    memory.heap-headroom-per-node:   500MB
  rules.json: |
    {{ tpl (readFile "configs/rules.json") . | nindent 4 | trim }}
  access-control.properties: |
    access-control.name=file
    security.config-file=etc/rules.json
    security.refresh-period=60s
  group-provider.properties: |
    group-provider.name=file
    file.group-file=etc/group.txt
    file.refresh-period=60s
  group.txt: |
    {{ tpl (readFile "configs/groups.txt") . | nindent 4 | trim }}

commons: {}
  # resources:
  #   requests:
  #     cpu: "1"
  #     memory: "1Gi"
  #   limits:
  #     cpu: "2"       # x4 request
  #     memory: "2Gi" # x4 request

worker:
  replicas: 3

cache:
  enabled: false

faultTolerant:
  enabled: true
  # The retry-policy configuration. Allowed: QUERY or TASK
  policy: QUERY

  config:
    # QUERY:
    query-retry-attempts: 2
    retry-initial-delay: 2
    retry-max-delay: 2
    retry-delay-scale-factor: 2

    # TASK:
    # task-retry-attempts-overall:
    # task-retry-attempts-per-task:
    # retry-initial-delay:
    # retry-max-delay:
    # retry-delay-scale-factor:
    # fault-tolerant-execution-target-task-input-size:
    # fault-tolerant-execution-target-task-split-count:
    # fault-tolerant-execution-min-task-split-count:
    # fault-tolerant-execution-max-task-split-count:
    # fault-tolerant-execution-task-memory:
    # fault-tolerant-execution-task-descriptor-storage-max-memory:
    # fault-tolerant-execution-partition-count:
    # max-tasks-waiting-for-node-per-stage:

  exchangeManager:
    enabled: true
    accessModes:
    - ReadWriteOnce
    storageClass: topolvm-hdd
    size: 300Gi
    compress: true
    # s3, aws, azure, gcs, local

    config:

      exchange-manager.name: filesystem

      # Tunning exchange-manager
      # exchange.sink-buffer-pool-min-size: 123
      # exchange.sink-buffers-per-partition: 123
      # exchange.sink-max-file-size: 123
      # exchange.source-concurrent-reader: 123

      # s3:
      exchange.base-directories: s3://develop/trino/exchange-manager/spool
      exchange.s3.aws-access-key: admin
      exchange.s3.aws-secret-key: SuperSecr3t
      exchange.s3.region: aws-global
      exchange.s3.max-error-retries: 3
      exchange.s3.path-style-access: true

      # azure:
      # exchange.base-directories: abfs://container_name@account_name.dfs.core.windows.net
      # exchange.azure.connection-string: connection-string

      # gcs:
      # exchange.base-directories: gs://exchange-spooling-bucket/path/to/spool-dir
      # exchange.s3.region: my-region
      # exchange.s3.aws-access-key: access-key
      # exchange.s3.aws-secret-key: secret-key
      # exchange.s3.endpoint: https://storage.googleapis.com
      # exchange.gcs.json-key-file-path: /path/to/gcs_keyfile.json

      # local:
      # exchange.base-directories: /tmp/trino-exchange-manager

httpServer:
  http:
    enabled: true
    port: 8080
  https:
    enabled: true
    port: 8443
  keystore:
    path: /etc/pki/k8s/keystore.p12
    key: jTATy27H2jQquoGHTxar3gGXgdg354GSA
  truststore:
    path: /etc/pki/k8s/truststore.p12
    key: jTATy27H2jQquoGHTxar3gGXgdg354GSA

catalog:
  jmx.properties: |
    {{ tpl (readFile "catalogs/jmx.properties") . | nindent 4 | trim }}
  postgresql.properties: |
    {{ tpl (readFile "catalogs/postgresql.properties") . | nindent 4 | trim }}
  mysql.properties: |
    {{ tpl (readFile "catalogs/mysql.properties") . | nindent 4 | trim }}

service:
  annotations:
    projectcontour.io/upstream-protocol.tls: "8443"

metrics:
  enabled: false
  port: 9090
  podMonitor:
    enabled: true

ingress:
  enabled: true
  annotations:
    ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  hosts:
  - host: trino.demo.com
    paths: [/]

authen:
  enabled: false
